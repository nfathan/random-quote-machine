{"version":3,"sources":["components/Author.js","components/ButtonNewQuote.js","components/LinkTweetQuote.js","quote-left-solid.svg","components/Text.js","components/QuoteBox.js","components/App.js","index.js"],"names":["Author","props","id","className","quoteAuthor","ButtonNewQuote","type","onClick","handleClickBtn","LinkTweetQuote","href","quoteText","target","width","height","viewBox","d","Text","src","doubleQuoteIcon","QuoteBox","useState","responseData","setResponseData","hex","textColor","document","querySelector","fetchData","useCallback","fetch","then","response","json","data","console","log","catch","error","getRandomColor","hexColor","i","Math","floor","random","length","changeColor","style","color","body","background","useEffect","quote","text","author","callback1","callback2","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAQeA,MARf,SAAgBC,GACd,OACE,qBAAKC,GAAG,SAASC,UAAU,SAA3B,SACE,mCAAMF,EAAMG,kBCUHC,MAbf,SAAwBJ,GACtB,OACE,wBACEC,GAAG,YACHC,UAAU,iBACVG,KAAK,SACLC,QAASN,EAAMO,eAJjB,wBCyBWC,MA3Bf,SAAwBR,GACtB,OACE,sBAAKE,UAAU,iBAAf,UACE,mBACED,GAAG,cACHC,UAAU,cACVO,KAAI,gDAA2CT,EAAMU,UAAjD,+EAEwCV,EAAMG,aAClDQ,OAAO,SANT,SAQE,sBACEC,MAAM,MACNC,OAAO,MACPC,QAAQ,YAHV,UAKE,sDACA,sBACEC,EAAE,wQAIR,qDCtBS,MAA0B,6CCW1BC,MATf,SAAchB,GACZ,OACE,sBAAKE,UAAU,OAAOD,GAAG,OAAzB,UACE,qBAAKC,UAAU,oBAAoBe,IAAKC,IACxC,6BAAKlB,EAAMU,gBCuEFS,MAvEf,WAEE,MAAwCC,mBAAS,CAAC,KAAlD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,CACV,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,KAEnDC,EAAYC,SAASC,cAAc,aAKnCC,EAAYC,uBAAY,WAC5BC,MAAM,+BACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAELX,EAAgBW,GAChBC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,QAEf,IAEGC,EAAiB,WAErB,IADA,IAAIC,EAAW,IACPC,EAAE,EAAGA,EAAE,EAAGA,IAChBD,GAAYhB,EAAIkB,KAAKC,MAAMD,KAAKE,SAASpB,EAAIqB,SAG/C,OADAV,QAAQC,IAAII,GACLA,GAOHM,EAAc,WAClBrB,EAAUsB,MAAMC,MAAQT,IACxBb,SAASuB,KAAKF,MAAMG,WALb,4BAA4BX,IAAiB,KAAKA,IAAiB,KAAKA,IAAiB,KAalGY,qBAAU,WAERvB,MACC,CAACA,IAGJ,IAAIwB,EAAQ9B,EAAaoB,KAAKC,MAAMD,KAAKE,SAAWtB,EAAauB,SAEjE,OACE,sBAAK3C,GAAG,YAAR,UACE,cAAC,EAAD,CAAgBS,UAAWyC,EAAMC,KAAMjD,YAA8B,OAAjBgD,EAAME,OAAkB,YAAcF,EAAME,SAChG,sBAAKnD,UAAU,WAAf,UACE,cAAC,EAAD,CAAMQ,UAAWyC,EAAMC,OACvB,cAAC,EAAD,CAAQjD,YAA8B,OAAjBgD,EAAME,OAAkB,YAAcF,EAAME,SACjE,qBAAKnD,UAAU,SAAf,SACE,cAAC,EAAD,CAAgBK,eApBO,SAAC+C,EAAWC,GAC7B5B,IACAkB,gB,MCtCDW,MAXf,WACE,OACE,sBAAKtD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,iCACE,uDAAyB,mBAAGO,KAAK,8CAA8CE,OAAO,SAA7D,uCCHjC8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,U","file":"static/js/main.1571caa5.chunk.js","sourcesContent":["function Author(props) {\r\n  return (  \r\n    <div id=\"author\" className=\"Author\">\r\n      <p>~ {props.quoteAuthor}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Author","function ButtonNewQuote(props) {\r\n  return (\r\n    <button \r\n      id=\"new-quote\"\r\n      className=\"ButtonNewQuote\"\r\n      type=\"button\"\r\n      onClick={props.handleClickBtn}\r\n    > \r\n      NEW QUOTE\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default ButtonNewQuote\r\n\r\n{/* <p>When the #new-quote button is clicked, my quote machine should fetch a new quote and display it in the #text element.</p>\r\n    <p>My quote machine should fetch the new quote's author when the #new-quote button is clicked and display it in the #author element.</p> */}\r\n","function LinkTweetQuote(props) {\r\n  return (\r\n    <div className=\"LinkTweetQuote\">\r\n      <a \r\n        id=\"tweet-quote\"\r\n        className=\"tweet-quote\" \r\n        href={`https://twitter.com/intent/tweet?text=${props.quoteText}\r\n              \r\n                                                ~ ${props.quoteAuthor}`} \r\n        target=\"_blank\"\r\n      >\r\n        <svg \r\n          width=\"100\" \r\n          height=\"100\"  \r\n          viewBox=\"0 0 32 32\"\r\n        >\r\n          <title>Tweet this quote!</title>\r\n          <path \r\n            d=\"M2 4 C6 8 10 12 15 11 A6 6 0 0 1 22 4 A6 6 0 0 1 26 6 A8 8 0 0 0 31 4 A8 8 0 0 1 28 8 A8 8 0 0 0 32 7 A8 8 0 0 1 28 11 A18 18 0 0 1 10 30 A18 18 0 0 1 0 27 A12 12 0 0 0 8 24 A8 8 0 0 1 3 20 A8 8 0 0 0 6 19.5 A8 8 0 0 1 0 12 A8 8 0 0 0 3 13 A8 8 0 0 1 2 4\">\r\n          </path>\r\n        </svg>\r\n      </a>\r\n      <p>tweet this quote</p>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LinkTweetQuote\r\n\r\n\r\n{/* <p>I can tweet the current quote by clicking on the #tweet-quote a element. This a element should include the \"twitter.com/intent/tweet\" path in its href attribute to tweet the current quote.</p> */}\r\n    ","export default __webpack_public_path__ + \"static/media/quote-left-solid.8ffe3316.svg\";","import doubleQuoteIcon from \"../quote-left-solid.svg\"\r\n\r\nfunction Text(props) {\r\n  return (\r\n    <div className=\"Text\" id=\"text\">\r\n      <img className=\"double-quote-icon\" src={doubleQuoteIcon} />\r\n      <h1>{props.quoteText}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text","import { useCallback, useEffect, useState } from \"react\"\r\nimport Author from \"./Author\"\r\nimport ButtonNewQuote from \"./ButtonNewQuote\"\r\nimport LinkTweetQuote from \"./LinkTweetQuote\"\r\nimport Text from \"./Text\"\r\n\r\nfunction QuoteBox() {\r\n  // state responseData utk store response data from API call\r\n  const [responseData, setResponseData] = useState([{}])\r\n  const hex = [\r\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\r\n  ]\r\n  const textColor = document.querySelector(\".QuoteBox\")\r\n  // API call disimpan dalam variable/function fetchData agar tidak hanya dipanggil/happens di dlm useEffect() tapi,\r\n  // juga bisa dipanggil saat button new quote diklick\r\n  // gunakan useCallback() hook, To stop the infinite loops of the side effects of the API call \r\n  // This hook returns a memoized callback that only changes if the dependencies of the function change\r\n  const fetchData = useCallback(() => {\r\n    fetch(\"https://type.fit/api/quotes\")\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((data) => {\r\n        // response data saved to the state responseData\r\n        setResponseData(data)\r\n        console.log(data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })  \r\n  }, [])\r\n\r\n  const getRandomColor = () => {\r\n    let hexColor = \"#\"\r\n    for(let i=0; i<6; i++) {\r\n      hexColor += hex[Math.floor(Math.random()*hex.length)]\r\n    }\r\n    console.log(hexColor)\r\n    return hexColor\r\n  }\r\n\r\n  const getRandomGradient = () => {    \r\n    return 'linear-gradient(to left, '+getRandomColor()+', '+getRandomColor()+', '+getRandomColor()+')'\r\n  }\r\n\r\n  const changeColor = () => {\r\n    textColor.style.color = getRandomColor()\r\n    document.body.style.background = getRandomGradient()\r\n  }\r\n\r\n  const handleClickBtnNewQuote = (callback1, callback2) => {\r\n    callback1 = fetchData()\r\n    callback2 = changeColor()\r\n  }\r\n\r\n  useEffect(() => {\r\n    // API call happens when the component is mounted/dipasang\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n  // get random quote of state responseData and saved to variable quote \r\n  let quote = responseData[Math.floor(Math.random() * responseData.length)]\r\n\r\n  return(\r\n    <div id=\"quote-box\">\r\n      <LinkTweetQuote quoteText={quote.text} quoteAuthor={quote.author === null ? \"Anonymous\" : quote.author} />\r\n      <div className=\"QuoteBox\">\r\n        <Text quoteText={quote.text} />\r\n        <Author quoteAuthor={quote.author === null ? \"Anonymous\" : quote.author} />  \r\n        <div className=\"center\">\r\n          <ButtonNewQuote handleClickBtn={handleClickBtnNewQuote}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default QuoteBox\r\n\r\n// The application will fetch a quote to display when the component mounts because of the function call in useEffect. \r\n// Then, if the user wants a new quote they can click the button later on!","import QuoteBox from './QuoteBox';\nimport '../App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n      <footer>\n        <p>Designed and Coded by <a href=\"https://nfathan.github.io/fathan-nasrullah/\" target=\"_blank\">Fathan Nasrullah</a></p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}